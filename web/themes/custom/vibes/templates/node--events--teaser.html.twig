{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}
<article{{ attributes }}>

  {{ title_prefix }}
    {% if label and not page %}
    <div class="article-header">
      <h2>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
      </h2>
      <h3>{{ author_name }} <span class="label-orange">{{content.field_event_is}}</span><span class="label-blue">{{content.field_event_type}}</span></h3>
    </div>
  {% endif %}
 
  {{ title_suffix }}

  <div{{ content_attributes }}>
    <div class="body-text">{{ content.body }}</div>
    <div class="hero-image">{{ content.field_hero_image }}</div>
    <div class="stat-section">
      {{ content.field_like}}
      <div class="comment-count">
        <svg width="21" height="17" viewBox="0 0 21 17" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M1 2.60155C1 1.71704 1.71704 1 2.60155 1H16.3291C17.2137 1 17.9307 1.71704 17.9307 2.60155V9.21741C17.9307 9.36012 17.9498 9.50219 17.9874 9.63984L18.9757 13.254C19.3526 14.6326 17.872 15.7771 16.6328 15.065L14.3508 13.7535C14.108 13.614 13.8328 13.5405 13.5528 13.5405H2.60155C1.71704 13.5405 1 12.8235 1 11.939V2.60155Z" fill="white"/>
          <path d="M1 2.60155C1 1.71704 1.71704 1 2.60155 1H16.3291C17.2137 1 17.9307 1.71704 17.9307 2.60155V9.21741C17.9307 9.36012 17.9498 9.50219 17.9874 9.63984L18.9757 13.254C19.3526 14.6326 17.872 15.7771 16.6328 15.065L14.3508 13.7535C14.108 13.614 13.8328 13.5405 13.5528 13.5405H2.60155C1.71704 13.5405 1 12.8235 1 11.939V2.60155Z" fill="white"/>
          <path d="M1 2.60155C1 1.71704 1.71704 1 2.60155 1H16.3291C17.2137 1 17.9307 1.71704 17.9307 2.60155V9.21741C17.9307 9.36012 17.9498 9.50219 17.9874 9.63984L18.9757 13.254C19.3526 14.6326 17.872 15.7771 16.6328 15.065L14.3508 13.7535C14.108 13.614 13.8328 13.5405 13.5528 13.5405H2.60155C1.71704 13.5405 1 12.8235 1 11.939V2.60155Z" stroke="#A0A0A0" stroke-width="2.00193"/>
          <path d="M1 2.60155C1 1.71704 1.71704 1 2.60155 1H16.3291C17.2137 1 17.9307 1.71704 17.9307 2.60155V9.21741C17.9307 9.36012 17.9498 9.50219 17.9874 9.63984L18.9757 13.254C19.3526 14.6326 17.872 15.7771 16.6328 15.065L14.3508 13.7535C14.108 13.614 13.8328 13.5405 13.5528 13.5405H2.60155C1.71704 13.5405 1 12.8235 1 11.939V2.60155Z" stroke="#A0A0A0" stroke-width="2.00193"/>
        </svg>

        <span>{{ events_comment_count }}</span>
      </div>
    </div>

</article>
